name: Build with Nuitka

on:
  push:
    tags:
      - 'v*'  # 自动触发：打tag时构建
  workflow_dispatch:  # 手动触发选项
    inputs:
      platform:
        description: 'Target platform (all/windows/linux/macos)'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - windows
          - linux
          - macos

jobs:
  build:
    strategy:
      matrix:
        os: 
          - ${{ github.event.inputs.platform == 'windows' || github.event.inputs.platform == 'all' || github.event_name != 'workflow_dispatch' && 'windows-latest' || 'skip' }}
          - ${{ github.event.inputs.platform == 'linux' || github.event.inputs.platform == 'all' || github.event_name != 'workflow_dispatch' && 'ubuntu-latest' || 'skip' }}
          - ${{ github.event.inputs.platform == 'macos' || github.event.inputs.platform == 'all' || github.event_name != 'workflow_dispatch' && 'macos-latest' || 'skip' }}
      exclude:
        - os: skip
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        pip install nuitka
        [ -f requirements.txt ] && pip install -r requirements.txt || echo "No requirements.txt"
    
    - name: Build Executable
      run: |
        if [ "${{ runner.os }}" = "Windows" ]; then
          python -m nuitka --standalone --onefile \
            --windows-icon-from-ico=3.ico \
            --windows-console-mode=disable \
            --output-dir=dist \
            --remove-output \
            3.py
          7z a -tzip release-windows.zip dist/*
        elif [ "${{ runner.os }}" = "Linux" ]; then
          python -m nuitka --standalone --onefile \
            --output-dir=dist \
            --remove-output \
            3.py
          tar -czvf release-linux.tar.gz dist/*
        else
          python -m nuitka --standalone --onefile \
            --output-dir=dist \
            --remove-output \
            3.py
          tar -czvf release-macos.tar.gz dist/*
        fi
    
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ runner.os }}-build
        path: |
          release-*.zip
          release-*.tar.gz
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release-*
